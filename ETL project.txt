--find top 10 highest reveue generating products 
select top 10 product_id,sum(sale_price) as sales
from df_orders
group by product_id
order by sales desc




--find top 5 highest selling products in each region
with cte as (
select region,product_id,sum(sale_price) as sales
from df_orders
group by region,product_id)
select * from (
select *
, row_number() over(partition by region order by sales desc) as rn
from cte) A
where rn<=5

--find month over month growth comparison for 2022 and 2023 sales eg : jan 2022 vs jan 2023
with monthly_sales_summary as (select EXTRACT(YEAR FROM order_date) AS order_year, EXTRACT(MONTH FROM order_date) as order_month,
sum(sale_price) as sales
from df_orders
group by order_year,order_month
order by order_year,order_month)
select order_month,sum(case when order_year=2022 then sales else 0 end )as sales_2022,
sum(case when order_year=2023 then sales else 0 end )as sales_2023
from monthly_sales_summary
GROUP by order_month
order by order_month

--for each category which month had highest sales 
with cte as (SELECT category,TO_CHAR(order_date, 'YYYYMM') as order_yearmonth,sum(sale_price) as sales,
row_number() over(partition by category order by sum(sale_price) DESC) as sales_rank
from df_orders 
group by category,order_yearmonth--,order_year
order by category,order_yearmonth)
select category,order_yearmonth,sales,sales_rank
from cte where sales_rank = 1

-- solution 2
with cte as (
select category,format(order_date,'yyyyMM') as order_year_month
, sum(sale_price) as sales 
from df_orders
group by category,format(order_date,'yyyyMM')
--order by category,format(order_date,'yyyyMM')
)
select * from (
select *,
row_number() over(partition by category order by sales desc) as rn
from cte
) a
where rn=1


--which sub category had highest growth by profit in 2023 compare to 2022
-- sol 1
SELECT 
    sub_category,
    SUM(CASE WHEN EXTRACT(YEAR FROM order_date) = 2022 THEN profit ELSE 0 END) AS profit_2022,
    SUM(CASE WHEN EXTRACT(YEAR FROM order_date) = 2023 THEN profit ELSE 0 END) AS profit_2023,
    (SUM(CASE WHEN EXTRACT(YEAR FROM order_date) = 2023 THEN profit ELSE 0 END) - 
    SUM(CASE WHEN EXTRACT(YEAR FROM order_date) = 2022 THEN profit ELSE 0 END)) AS profit_growth,
    ((SUM(CASE WHEN EXTRACT(YEAR FROM order_date) = 2023 THEN profit ELSE 0 END) - 
    SUM(CASE WHEN EXTRACT(YEAR FROM order_date) = 2022 THEN profit ELSE 0 END)) / 
    NULLIF(SUM(CASE WHEN EXTRACT(YEAR FROM order_date) = 2022 THEN profit ELSE 0 END),0)) * 100 AS profit_growth_percentage
FROM 
    df_orders
GROUP BY 
    sub_category
ORDER BY 
    profit_growth DESC;
	
-- sol 2
with cte as (
select sub_category,year(order_date) as order_year,
sum(sale_price) as sales
from df_orders
group by sub_category,year(order_date)
--order by year(order_date),month(order_date)
	)
, cte2 as (
select sub_category
, sum(case when order_year=2022 then sales else 0 end) as sales_2022
, sum(case when order_year=2023 then sales else 0 end) as sales_2023
from cte 
group by sub_category
)
select top 1 *
,(sales_2023-sales_2022)
from  cte2
order by (sales_2023-sales_2022) desc	



